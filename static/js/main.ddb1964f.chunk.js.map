{"version":3,"sources":["components/Lesson.jsx","components/Quiz.jsx","components/Board.jsx","components/Index.jsx","App.js","index.js"],"names":["Board","words","useState","index","setIndex","className","style","fontSize","fontWeight","marginRight","vKana","vExp","vMean","parse","sKana","replace","sExp","sMean","onClick","disabled","QuizQuestion","question","toEN","marginLeft","QuizAnswer","answer","id","undefined","isCorrect","setIsCorrect","useEffect","alert","fill","size","Quiz","double","fillers","_","shuffle","filter","f","answers","slice","map","key","nanoid","learn","setLearn","Lesson","Index","state","options","value","show","handleChange","bind","handleClick","fetch","then","res","json","setState","catch","err","error","message","e","this","target","tagName","limit","i","push","label","width","role","lv","ilv","onChange","placeholder","opts","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddb1964f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport parse from 'html-react-parser'\r\n\r\nconst Board = ({ words }) => {\r\n    const [index, setIndex] = useState(0)\r\n\r\n    return (\r\n        <div className=\"card-body\">\r\n            {/* <p>{words[index].vPos}</p> */}\r\n            <div>\r\n                <span style={{\r\n                    fontSize: '32px',\r\n                    fontWeight: '600',\r\n                    marginRight: '0.75rem'\r\n                }}>{words[index].vKana}</span>\r\n                <span>[ {words[index].vExp} ]</span>\r\n            </div>\r\n            <div>\r\n                <span className=\"text-muted\">Translation: </span>\r\n                <span className=\"font-weight-bold\">{words[index].vMean}</span>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mb-2\">\r\n                <span className=\"text-monospace\">Usage example:</span>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <span style={{\r\n                        fontWeight: '500',\r\n                        fontSize: '20px'\r\n                    }}>{parse(words[index].sKana\r\n                        .replace(/<b>/, '<span class=\"text-danger font-weight-bold\">')\r\n                        .replace(/<\\/b>/, '</span>'))}\r\n                    </span>\r\n                </li>\r\n                <li>\r\n                    <span style={{\r\n                        fontWeight: '500',\r\n                        fontSize: '20px'\r\n                    }}>{parse(words[index].sExp\r\n                        .replace(/<b>/, '<span class=\"text-danger font-weight-bold\">')\r\n                        .replace(/<\\/b>/, '</span>'))}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n            <div className=\"mt-2\">\r\n                <span className=\"text-muted\">Translation: </span>\r\n                <span className=\"font-weight-bold\">{words[index].sMean}</span>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n                <button\r\n                    className=\"btn btn-sm btn-outline-success\"\r\n                    onClick={() => { setIndex(index - 1) }}\r\n                    disabled={0 === index}\r\n                >\r\n                    Prev\r\n                    </button>\r\n                <button\r\n                    className=\"btn btn-sm btn-outline-success ml-1\"\r\n                    onClick={() => { setIndex(index + 1) }}\r\n                    disabled={9 === index}\r\n                >\r\n                    Next\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board","import React, { useState, useEffect, Fragment } from 'react'\r\nimport _ from 'lodash'\r\nimport { BsCheckCircle, BsCircle } from 'react-icons/bs'\r\nimport { nanoid } from 'nanoid'\r\n\r\nconst Quiz = ({ words }) => {\r\n    const [index, setIndex] = useState(0)\r\n    const double = [...words, ...words]\r\n    const fillers = _.shuffle(double.filter(f => f.id !== double[index].id))\r\n    const answers = _.shuffle([double[index], ...fillers.slice(0, 3)])\r\n    const toEN = index < 10 ? true : false\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"p-3\">\r\n                <QuizQuestion question={double[index]} toEN={toEN} />\r\n\r\n                <div className=\"p-2\">\r\n                    <div className=\"list-group\">\r\n                        {\r\n                            answers.map((answer) => (\r\n                                <QuizAnswer\r\n                                    key={nanoid()}\r\n                                    answer={answer}\r\n                                    id={double[index].id}\r\n                                    toEN={toEN}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mt-2 ml-2\">\r\n                    <button\r\n                        className=\"btn btn-sm btn-outline-success\"\r\n                        onClick={() => { setIndex(index + 1) }}\r\n                        disabled={index === 19}\r\n                    >\r\n                        Next\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst QuizQuestion = ({ question, toEN }) => {\r\n    return (\r\n        <div>\r\n            {toEN ?\r\n                <Fragment>\r\n                    <span style={{\r\n                        fontSize: '34px',\r\n                        fontWeight: '600',\r\n                        marginRight: '0.75rem'\r\n                    }}>{question.vKana}</span>\r\n                    <span>[ {question.vExp} ]</span>\r\n                </Fragment>\r\n                : <span style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                    marginLeft: '0.75rem'\r\n                }}>{question.vMean}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst QuizAnswer = ({ answer, id, toEN }) => {\r\n    const [isCorrect, setIsCorrect] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        if (isCorrect === false) {\r\n            alert('Wrong answer. Please try again.')\r\n        }\r\n    })\r\n\r\n    return (\r\n        <button\r\n            className=\"list-group-item list-group-item-action\"\r\n            onClick={() => { setIsCorrect(answer.id === id) }}\r\n        >\r\n            {isCorrect ?\r\n                <BsCheckCircle fill=\"#17A267\" size={22} />\r\n                : <BsCircle size={18} />} {toEN ? answer.vMean\r\n                : answer.vKana + ' [' + answer.vExp + ']'}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Quiz","import React, { useState } from 'react'\r\nimport _ from 'lodash'\r\n\r\nimport Lesson from './Lesson'\r\nimport Quiz from './Quiz'\r\n\r\nconst Board = ({ words }) => {\r\n    const [learn, setLearn] = useState(true)\r\n\r\n    return (\r\n        <div className=\"card shadow\">\r\n            {learn ? <Lesson words={words} /> : <Quiz words={_.shuffle(words)} />}\r\n\r\n            <div className=\"card-footer\">\r\n                <button\r\n                    className=\"btn btn-block btn-outline-dark\"\r\n                    onClick={() => { setLearn(!learn) }}\r\n                >\r\n                    {learn ? \"Take Quiz\" : \"Learn\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board","import React from 'react'\r\nimport Select from 'react-select'\r\nimport { BsHouse } from 'react-icons/bs'\r\n\r\nimport Board from './Board'\r\n\r\nclass Index extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            options: [],\r\n            words: [],\r\n            index: 1,\r\n            value: 0,\r\n            show: true\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('words.json')\r\n            .then(res => res.json())\r\n            .then(words => {\r\n                this.setState({\r\n                    words\r\n                })\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    error: true,\r\n                    message: err.message\r\n                })\r\n            })\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            value: e.value,\r\n            show: false\r\n        })\r\n    }\r\n\r\n    handleClick(e) {\r\n        if (e.target.tagName !== 'BUTTON') return\r\n\r\n        this.setState({\r\n            index: e.target.id,\r\n            value: 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { index, value, words, show } = this.state\r\n        const limit = index * 100\r\n        const idx = +index === 1 ? 1 : limit - 99\r\n        const levelBtn = [1, 2, 3, 4, 5, 6]\r\n        const options = []\r\n\r\n        for (let i = idx; i <= limit; i++) {\r\n            options.push({ value: i, label: 'Lesson ' + i })\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <nav className=\"navbar navbar-light bg-dark mb-2\">\r\n                    <div className=\"d-flex justify-content-center\" style={{ width: '100%' }}>\r\n                        <h4 className=\"text-white\">Learn Japanese Vocabulary</h4>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div className=\"col-xl-8 col-md-10 col-xs-12\">\r\n                        {show ?\r\n                            <div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <div\r\n                                        onClick={this.handleClick}\r\n                                        role=\"group\"\r\n                                        className=\"btn-group my-2\"\r\n                                    >\r\n                                        {\r\n                                            levelBtn.map((lv, ilv) => (\r\n                                                <button\r\n                                                    key={ilv}\r\n                                                    id={lv}\r\n                                                    className=\"btn btn-dark\"\r\n                                                >\r\n                                                    {lv}\r\n                                                </button>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <Select\r\n                                    options={options}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Select level\"\r\n                                    value={options.filter(opts => (opts.value === value))}\r\n                                />\r\n                            </div>\r\n                            : <div className=\"mt-2\">\r\n                                <Board words={words.slice((value * 10 - 10), value * 10)} />\r\n                                <div>\r\n                                    <button\r\n                                        className=\"btn btn-light btn-block mt-4\"\r\n                                        onClick={() => { this.setState({ show: true }) }}\r\n                                    >\r\n                                        <BsHouse size={20} className=\"mb-1\" /> Back to homepage\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index","import React from 'react'\r\nimport Index from './components/Index'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Index />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}