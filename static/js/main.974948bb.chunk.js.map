{"version":3,"sources":["components/Note.jsx","components/Lesson.jsx","components/Quiz.jsx","components/Board.jsx","components/Index.jsx","App.js","index.js"],"names":["Note","useState","localStorage","getItem","notes","setNotes","className","defaultValue","onChange","e","target","value","trim","onBlur","setItem","rows","Board","words","index","setIndex","style","fontSize","fontWeight","marginRight","vKana","vExp","vMean","parse","sKana","replace","sExp","sMean","onClick","disabled","QuizQuestion","question","toEN","marginLeft","QuizAnswer","answer","id","undefined","isCorrect","setIsCorrect","useEffect","alert","fill","size","Quiz","double","fillers","_","shuffle","filter","f","answers","slice","map","key","nanoid","learn","setLearn","Lesson","Index","state","options","show","handleChange","bind","handleClick","fetch","then","res","json","setState","catch","err","error","message","this","tagName","limit","i","push","label","width","role","lv","ilv","placeholder","opts","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.974948bb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Note = () => {\r\n    const [notes, setNotes] = useState(localStorage.getItem('notes'))\r\n\r\n    const save = () => {\r\n        localStorage.setItem('notes', notes)\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-group mt-4\">\r\n            <label>Note:</label>\r\n            <textarea\r\n                defaultValue={notes}\r\n                onChange={(e) => { setNotes(e.target.value.trim()) }}\r\n                onBlur={save}\r\n                className=\"form-control\" rows=\"5\"></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","import React, { useState } from 'react'\r\nimport parse from 'html-react-parser'\r\n\r\nconst Board = ({ words }) => {\r\n    const [index, setIndex] = useState(0)\r\n\r\n    return (\r\n        <div className=\"card-body\">\r\n            {/* <p>{words[index].vPos}</p> */}\r\n            <div>\r\n                <span style={{\r\n                    fontSize: '32px',\r\n                    fontWeight: '600',\r\n                    marginRight: '0.75rem'\r\n                }}>{words[index].vKana}</span>\r\n                <span>[ {words[index].vExp} ]</span>\r\n            </div>\r\n            <div>\r\n                <span className=\"text-muted\">Translation: </span>\r\n                <span className=\"font-weight-bold\">{words[index].vMean}</span>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mb-2\">\r\n                <span className=\"text-monospace\">Usage example:</span>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <span style={{\r\n                        fontWeight: '500',\r\n                        fontSize: '20px'\r\n                    }}>{parse(words[index].sKana\r\n                        .replace(/<b>/, '<span class=\"text-danger font-weight-bold\">')\r\n                        .replace(/<\\/b>/, '</span>'))}\r\n                    </span>\r\n                </li>\r\n                <li>\r\n                    <span style={{\r\n                        fontWeight: '500',\r\n                        fontSize: '20px'\r\n                    }}>{parse(words[index].sExp\r\n                        .replace(/<b>/, '<span class=\"text-danger font-weight-bold\">')\r\n                        .replace(/<\\/b>/, '</span>'))}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n            <div className=\"mt-2\">\r\n                <span className=\"text-muted\">Translation: </span>\r\n                <span className=\"font-weight-bold\">{words[index].sMean}</span>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n                <button\r\n                    className=\"btn btn-sm btn-outline-success\"\r\n                    onClick={() => { setIndex(index - 1) }}\r\n                    disabled={0 === index}\r\n                >\r\n                    Prev\r\n                    </button>\r\n                <button\r\n                    className=\"btn btn-sm btn-outline-success ml-1\"\r\n                    onClick={() => { setIndex(index + 1) }}\r\n                    disabled={9 === index}\r\n                >\r\n                    Next\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board","import React, { useState, useEffect, Fragment } from 'react'\r\nimport _ from 'lodash'\r\nimport { BsCheckCircle, BsCircle } from 'react-icons/bs'\r\nimport { nanoid } from 'nanoid'\r\n\r\nconst Quiz = ({ words }) => {\r\n    const [index, setIndex] = useState(0)\r\n    const double = [...words, ...words]\r\n    const fillers = _.shuffle(words.filter(f => f.id !== double[index].id))\r\n    const answers = _.shuffle([double[index], ...fillers.slice(0, 3)])\r\n    const toEN = index < 10 ? true : false\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"p-3\">\r\n                <QuizQuestion question={double[index]} toEN={toEN} />\r\n\r\n                <div className=\"p-2\">\r\n                    <div className=\"list-group\">\r\n                        {\r\n                            answers.map((answer) => (\r\n                                <QuizAnswer\r\n                                    key={nanoid()}\r\n                                    answer={answer}\r\n                                    id={double[index].id}\r\n                                    toEN={toEN}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mt-2 ml-2\">\r\n                    <button\r\n                        className=\"btn btn-sm btn-outline-success\"\r\n                        onClick={() => { setIndex(index + 1) }}\r\n                        disabled={index === 19}\r\n                    >\r\n                        Next\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst QuizQuestion = ({ question, toEN }) => {\r\n    return (\r\n        <div>\r\n            {toEN ?\r\n                <Fragment>\r\n                    <span style={{\r\n                        fontSize: '34px',\r\n                        fontWeight: '600',\r\n                        marginRight: '0.75rem'\r\n                    }}>{question.vKana}</span>\r\n                    <span>[ {question.vExp} ]</span>\r\n                </Fragment>\r\n                : <span style={{\r\n                    fontSize: '30px',\r\n                    fontWeight: '600',\r\n                    marginLeft: '0.75rem'\r\n                }}>{question.vMean}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst QuizAnswer = ({ answer, id, toEN }) => {\r\n    const [isCorrect, setIsCorrect] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        if (isCorrect === false) {\r\n            alert('Wrong answer. Please try again.')\r\n        }\r\n    })\r\n\r\n    return (\r\n        <button\r\n            className=\"list-group-item list-group-item-action\"\r\n            onClick={() => { setIsCorrect(answer.id === id) }}\r\n        >\r\n            {isCorrect ?\r\n                <BsCheckCircle fill=\"#17A267\" size={22} />\r\n                : <BsCircle size={18} />} {toEN ? answer.vMean\r\n                : answer.vKana + ' [' + answer.vExp + ']'}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Quiz","import React, { useState } from 'react'\r\nimport _ from 'lodash'\r\n\r\nimport Lesson from './Lesson'\r\nimport Quiz from './Quiz'\r\n\r\nconst Board = ({ words }) => {\r\n    const [learn, setLearn] = useState(true)\r\n\r\n    return (\r\n        <div className=\"card shadow\">\r\n            {learn ? <Lesson words={words} /> : <Quiz words={_.shuffle(words)} />}\r\n\r\n            <div className=\"card-footer\">\r\n                <button\r\n                    className=\"btn btn-block btn-outline-dark\"\r\n                    onClick={() => { setLearn(!learn) }}\r\n                >\r\n                    {learn ? \"Take Quiz\" : \"Learn\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board","import React from 'react'\r\nimport Select from 'react-select'\r\nimport { BsHouse } from 'react-icons/bs'\r\n\r\nimport Note from './Note'\r\nimport Board from './Board'\r\n\r\nclass Index extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            options: [],\r\n            words: [],\r\n            index: 1,\r\n            value: 0,\r\n            show: true\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('words.json')\r\n            .then(res => res.json())\r\n            .then(words => {\r\n                this.setState({\r\n                    words\r\n                })\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    error: true,\r\n                    message: err.message\r\n                })\r\n            })\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            value: e.value,\r\n            show: false\r\n        })\r\n    }\r\n\r\n    handleClick(e) {\r\n        if (e.target.tagName !== 'BUTTON') return\r\n\r\n        this.setState({\r\n            index: e.target.id,\r\n            value: 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { index, value, words, show } = this.state\r\n        const limit = index * 100\r\n        const idx = +index === 1 ? 1 : limit - 99\r\n        const levelBtn = [1, 2, 3, 4, 5, 6]\r\n        const options = []\r\n\r\n        for (let i = idx; i <= limit; i++) {\r\n            options.push({ value: i, label: 'Lesson ' + i })\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <nav className=\"navbar navbar-light bg-dark mb-2\">\r\n                    <div className=\"d-flex justify-content-center\" style={{ width: '100%' }}>\r\n                        <h4 className=\"text-white\">Learn Japanese Vocabulary</h4>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div className=\"col-xl-8 col-md-10 col-xs-12\">\r\n                        {show\r\n                            ? <div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <div\r\n                                        onClick={this.handleClick}\r\n                                        role=\"group\"\r\n                                        className=\"btn-group my-2\">\r\n                                        {levelBtn.map((lv, ilv) => (\r\n                                                <button\r\n                                                    key={ilv}\r\n                                                    id={lv}\r\n                                                    className=\"btn btn-dark\">\r\n                                                    {lv}\r\n                                                </button>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <Select\r\n                                    options={options}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Select level\"\r\n                                    value={options.filter(opts => (opts.value === value))}\r\n                                />\r\n                                <Note />\r\n                            </div>\r\n                            : <div className=\"mt-2\">\r\n                                <Board words={words.slice((value * 10 - 10), value * 10)} />\r\n                                <div>\r\n                                    <button\r\n                                        className=\"btn btn-light btn-block mt-4\"\r\n                                        onClick={() => { this.setState({ show: true }) }}\r\n                                    >\r\n                                        <BsHouse size={20} className=\"mb-1\" /> Back to homepage\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index","import React from 'react'\r\nimport Index from './components/Index'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Index />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}